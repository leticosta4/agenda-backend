version: "3.9"

services:
  agenda:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    volumes:
       - ./src:/app/src
       - ./target:/app/target
       - ~/.m2:/root/.m2
    environment:
      - JAVA_OPTS=-Dspring.devtools.restart.enabled=true -Dspring.devtools.livereload.enabled=true
      - SPRING_PROFILES_ACTIVE=dev
    command: ["mvn", "spring-boot:run", "-Dspring-boot.run.profiles=dev", "-Dspring-boot.run.jvmArguments=-Dspring.devtools.restart.enabled=true -Dspring.devtools.livereload.enabled=true"]

  database:
    image: postgres:17
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
 
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/sql:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
